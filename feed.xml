<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://rumialunnar.github.io/</id><title>Blog</title><subtitle></subtitle> <updated>2021-02-13T19:23:07+08:00</updated> <author> <name>Rumia</name> <uri>https://rumialunnar.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://rumialunnar.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://rumialunnar.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator> <rights> © 2021 Rumia </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Python举偏补弊</title><link href="https://rumialunnar.github.io/posts/Python-%E4%B8%BE%E5%81%8F%E8%A1%A5%E5%BC%8A/" rel="alternate" type="text/html" title="Python举偏补弊" /><published>2021-02-11T07:04:00+08:00</published> <updated>2021-02-11T07:04:00+08:00</updated> <id>https://rumialunnar.github.io/posts/Python-%E4%B8%BE%E5%81%8F%E8%A1%A5%E5%BC%8A/</id> <content src="https://rumialunnar.github.io/posts/Python-%E4%B8%BE%E5%81%8F%E8%A1%A5%E5%BC%8A/" /> <author> <name>Rumia</name> </author> <category term="blog" /> <summary> zip 函数 zip() 函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。 如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用 * 号操作符，可以将元组解压为列表。 用法： zip([iterable,...]) #返回一个元组对象 *zip()#用于解压缩， 可以在机器学习中用于打乱数据 X = [1, 2, 3, 4, 5, 6] y = [0, 1, 0, 0, 1, 1] zipped_data = list(zip(X, y)) # 将样本和标签一 一对应组合起来,并转换成list类型方便后续打乱操作 random.shuffle(zipped_data) # 使用random模块中的shuffle函数打乱列表，原地操作，没有返回值 shuffle本身也是洗牌的意思 new_zippe... </summary> </entry> <entry><title>微机原理笔记#0</title><link href="https://rumialunnar.github.io/posts/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/" rel="alternate" type="text/html" title="微机原理笔记#0" /><published>2021-02-11T01:40:00+08:00</published> <updated>2021-02-11T01:40:00+08:00</updated> <id>https://rumialunnar.github.io/posts/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/</id> <content src="https://rumialunnar.github.io/posts/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/" /> <author> <name>Rumia</name> </author> <category term="blog" /> <summary> 因为准备复试, 学习一下微机原理, 第一篇笔记记录一下思维导图 </summary> </entry> <entry><title>合并硬盘分区的两种方法</title><link href="https://rumialunnar.github.io/posts/%E5%90%88%E5%B9%B6%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/" rel="alternate" type="text/html" title="合并硬盘分区的两种方法" /><published>2021-02-11T01:40:00+08:00</published> <updated>2021-02-13T19:22:12+08:00</updated> <id>https://rumialunnar.github.io/posts/%E5%90%88%E5%B9%B6%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</id> <content src="https://rumialunnar.github.io/posts/%E5%90%88%E5%B9%B6%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/" /> <author> <name>Rumia</name> </author> <category term="blog" /> <summary> 1 不保留原有文件 此法可能会造成被合并盘符内文件丢失，不过大多数情况下应该可以通过数据恢复找回文件 另外需要说明的是，这里的所谓的合并磁盘本质上合并在磁盘上个一个一个分区，而不是真正的独立的磁盘 打开此电脑（win+E) 打开管理 打开磁盘管理 可以看到我这里显示是磁盘0和磁盘1，代表我的计算机上装有两个实体硬盘，不是同一个实体硬盘不能合并分区（固态硬盘和机械硬盘） 删除某磁盘分区 这里正好有一个我不需要的分区，可以合并，在你的电脑上应该显示为你想被合并进去的那块磁盘（这块盘数据会丢失） 删除完之后会显示为未分配状态 合并磁盘 在想要合并进去的磁盘分区上点击拓展卷 ... </summary> </entry> <entry><title>图像分割</title><link href="https://rumialunnar.github.io/posts/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/" rel="alternate" type="text/html" title="图像分割" /><published>2021-02-10T17:40:00+08:00</published> <updated>2021-02-10T17:40:00+08:00</updated> <id>https://rumialunnar.github.io/posts/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/</id> <content src="https://rumialunnar.github.io/posts/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/" /> <author> <name>Rumia</name> </author> <category term="blog" /> <summary> 整体等于其部分之和 —— 欧几里得 整体大于其部分之和 —— Max Wertheimer 基本概念 在计算机视觉领域，图像分割（segmentation）指的是将数字图像细分为多个图像子区域（像素的集合）（也被称作超像素）的过程。图像分割的目的是简化或改变图像的表示形式，使得图像更容易理解和分析。[1]图像分割通常用于定位图像中的物体和边界（线，曲线等）。更精确的，图像分割是对图像中的每个像素加标签的一个过程，这一过程使得具有相同标签的像素具有某种共同视觉特性。 图像分割的结果是图像上子区域的集合（这些子区域的全体覆盖了整个图像），或是从图像中提取的轮廓线的集合（例如边缘检测）。一个子区域中的每个像素在某种特性的度量下或是由计算得出的特性都是相似的，例如颜色、亮度、纹理。邻接... </summary> </entry> <entry><title>考研总结</title><link href="https://rumialunnar.github.io/posts/%E8%80%83%E7%A0%94%E5%BF%83%E5%BE%97/" rel="alternate" type="text/html" title="考研总结" /><published>2021-02-10T01:40:00+08:00</published> <updated>2021-02-09T19:25:56+08:00</updated> <id>https://rumialunnar.github.io/posts/%E8%80%83%E7%A0%94%E5%BF%83%E5%BE%97/</id> <content src="https://rumialunnar.github.io/posts/%E8%80%83%E7%A0%94%E5%BF%83%E5%BE%97/" /> <author> <name>Rumia</name> </author> <category term="blog" /> <summary> 白苎新袍入嫩凉。春蚕食叶响回廊，禹门已准桃花浪，月殿先收桂子香。 鹏北海，凤朝阳。又携书剑路茫茫。明年此日青云去，却笑人间举子忙。 为什么考研 首要问题是提高就业竞争力，我并没有瞧不起我的学校，我只是认为我所在的学校给我提供的平台并没有那么让我满意，包括软硬件条件，教学水平等等。考上研究生之后，至少可以提升平台，更容易的找到一份心仪的工作。 当然我并不抗拒去工作，事实上我也学了不少东西，去找个小厂当当码农还是可以的。 其次是为了解开我的一个心结，高考翻车的痛隐隐约约疼了快4年，不管怎样，考一下，了了这个心结。 经验之谈 关于择校不谈，主要讲关于公共课的复习。 1. 数学 早期（3月到6月）一直在看汤家凤，后来感觉汤家凤的课过于简单，至少基础阶段是这样，但是总体来讲汤家凤的课还是非常适合打基础的，主要问题在于1800（一本习题册），这本习题册着实不敢恭维，答案... </summary> </entry> </feed>
